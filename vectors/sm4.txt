#static BLOCKCIPHER_DATA_INFO vec_sm4_none[] = 
#{
#    {
#        "sm4", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        0 /* NULL */,
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        "\x8F\x78\x76\x3E\xE0\x60\x13\xE0\xB7\x62\x2C\x42\x8F\xD0\x52\x8D", 16, 
#    },
#};
#
#static BLOCKCIPHER_DATA_INFO vec_sm4_ecb[] = 
#{
#    {
#        "sm4<ecb>", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        0 /* NULL */,
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 32, 
#        "\x8F\x78\x76\x3E\xE0\x60\x13\xE0\xB7\x62\x2C\x42\x8F\xD0\x52\x8D\x8F\x78\x76\x3E\xE0\x60\x13\xE0\xB7\x62\x2C\x42\x8F\xD0\x52\x8D", 32, 
#    },
#};
#
#static BLOCKCIPHER_DATA_INFO vec_sm4_cbc[] = 
#{
#    {
#        "sm4<cbc>", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 32, 
#        "\x1E\x96\x34\xB7\x70\xF9\xAE\xBA\xA9\x34\x4F\x5A\xFF\x9F\x82\xA3\x78\x5F\xCC\x9F\xC1\x41\x51\xC2\x68\x43\x57\xA6\xD2\x3D\x62\xBC", 32, 
#    },
#};
#
#static BLOCKCIPHER_DATA_INFO vec_sm4_cfb[] = 
#{
#    {
#        "sm4<cfb>", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04", 37, 
#        "\x8F\x79\x74\x3D\xE4\x65\x15\xE7\xBF\x6B\x26\x49\x83\xDD\x5C\x82\x94\x4F\xD5\x4D\xE6\xD4\x0A\x3B\xAC\xBA\x3C\x16\x05\x59\xE0\x9B\xB9\x9D\x96\x85\xAA", 37, 
#    },
#};
#
#static BLOCKCIPHER_DATA_INFO vec_sm4_ofb[] = 
#{
#    {
#        "sm4<ofb>", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04", 37, 
#        "\x8F\x79\x74\x3D\xE4\x65\x15\xE7\xBF\x6B\x26\x49\x83\xDD\x5C\x82\xA0\x1D\xFC\x92\xAE\x7B\xF7\x72\x62\xE1\xB6\xEA\x59\x05\xD4\x7E\x2C\x77\x2D\xC2\x49", 37, 
#    },
#};
#
#static BLOCKCIPHER_DATA_INFO vec_sm4_ctr[] = 
#{
#    {
#        "sm4<ctr>", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 16, 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F", 
#        "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x00\x01\x02\x03\x04", 37, 
#        "\x8F\x79\x74\x3D\xE4\x65\x15\xE7\xBF\x6B\x26\x49\x83\xDD\x5C\x82\x8E\x24\x58\x10\xC3\x46\x4B\x92\xE7\x1D\x1F\x1A\xDC\xB4\x6E\x54\x4A\xEC\x34\xB8\x1D", 37, 
#    },
#};

/*
 * SM4 Encryption alogrithm (SMS4 algorithm)
 * GM/T 0002-2012 Chinese National Standard ref:http://www.oscca.gov.cn/ 
 * thanks to Xyssl
 * thnaks and refers to http://hi.baidu.com/numax/blog/item/80addfefddfb93e4cf1b3e61.html
 * author:goldboar
 * email:goldboar@163.com
 * 2012-4-20
 */

// Test vector 1
// plain: 01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 10
// key:   01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 10
// 	   round key and temp computing result:
// 	   rk[ 0] = f12186f9 X[ 0] = 27fad345
// 		   rk[ 1] = 41662b61 X[ 1] = a18b4cb2
// 		   rk[ 2] = 5a6ab19a X[ 2] = 11c1e22a
// 		   rk[ 3] = 7ba92077 X[ 3] = cc13e2ee
// 		   rk[ 4] = 367360f4 X[ 4] = f87c5bd5
// 		   rk[ 5] = 776a0c61 X[ 5] = 33220757
// 		   rk[ 6] = b6bb89b3 X[ 6] = 77f4c297
// 		   rk[ 7] = 24763151 X[ 7] = 7a96f2eb
// 		   rk[ 8] = a520307c X[ 8] = 27dac07f
// 		   rk[ 9] = b7584dbd X[ 9] = 42dd0f19
// 		   rk[10] = c30753ed X[10] = b8a5da02
// 		   rk[11] = 7ee55b57 X[11] = 907127fa
// 		   rk[12] = 6988608c X[12] = 8b952b83
// 		   rk[13] = 30d895b7 X[13] = d42b7c59
// 		   rk[14] = 44ba14af X[14] = 2ffc5831
// 		   rk[15] = 104495a1 X[15] = f69e6888
// 		   rk[16] = d120b428 X[16] = af2432c4
// 		   rk[17] = 73b55fa3 X[17] = ed1ec85e
// 		   rk[18] = cc874966 X[18] = 55a3ba22
// 		   rk[19] = 92244439 X[19] = 124b18aa
// 		   rk[20] = e89e641f X[20] = 6ae7725f
// 		   rk[21] = 98ca015a X[21] = f4cba1f9
// 		   rk[22] = c7159060 X[22] = 1dcdfa10
// 		   rk[23] = 99e1fd2e X[23] = 2ff60603
// 		   rk[24] = b79bd80c X[24] = eff24fdc
// 		   rk[25] = 1d2115b0 X[25] = 6fe46b75
// 		   rk[26] = 0e228aeb X[26] = 893450ad
// 		   rk[27] = f1780c81 X[27] = 7b938f4c
// 		   rk[28] = 428d3654 X[28] = 536e4246
// 		   rk[29] = 62293496 X[29] = 86b3e94f
// 		   rk[30] = 01cf72e5 X[30] = d206965e
// 		   rk[31] = 9124a012 X[31] = 681edf34
// cypher: 68 1e df 34 d2 06 96 5e 86 b3 e9 4f 53 6e 42 46
// 		
// test vector 2
// the same key and plain 1000000 times coumpting 
// plain:  01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 10
// key:    01 23 45 67 89 ab cd ef fe dc ba 98 76 54 32 10
// cypher: 59 52 98 c7 c6 fd 27 1f 04 02 f8 04 c3 3d 3f 66
